View(perf_knn)
perf_glm$alpha.values
perf_glm$alpha.names
perf_glm$alpha.name
View(perf_glm)
perf_glm$alpha.values
perf_glm$alpha.values
perf_glm@alpha.values
which.max(perf_glm@alpha.values)
max(perf_glm@alpha.values)
class(perf_glm@alpha.values)
class(data.frame(perf_glm@alpha.values))
which.max(data.frame(perf_glm@alpha.values))
max(data.frame(perf_glm@alpha.values))
kk<-data.frame(perf_glm@alpha.values)
View(kk)
kk
perf_glm@alpha.values
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
# kk<-data.frame(perf_glm@alpha.values)
# kk
# perf_glm@alpha.values
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric), scale(datos_train_numeric), cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
pref_tree = performance(pred_tree,"sens","spec")
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(pref_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
kk<-data.frame(perf_glm@alpha.values[1,15000])
kk<-data.frame(perf_glm@alpha.values[1:15000,])
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
# kk<-data.frame(perf_glm@alpha.values[1:15000,])
# kk
# perf_glm@alpha.values
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric), scale(datos_train_numeric), cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
pref_tree = performance(pred_tree,"sens","spec")
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(pref_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
kk<-data.frame(perf_glm@alpha.values[perf_glm@x.values==0.6])
kk<-data.frame(perf_glm@alpha.values[perf_glm@x.values==0.6,])
kk<-data.frame(perf_glm@alpha.values[perf_glm@x.values==0.6],)
kk<-data.frame(perf_glm@alpha.values)
kk<- perf_glm@alpha.values
kk<- perf_glm@alpha.values
alpha <- perf_glm@alpha.values
x_val <- perf_glm@x.values
View(x_val)
View(prob_svm)
View(x_val)
View(alpha)
alpha <- data.frame(perf_glm@alpha.values)
View(alpha)
x_val <- data.frame(perf_glm@x.values)
View(x_val)
x_val[1]
x_val[1]
x_val[1,1]
x_val[1,1]
alpha[x_val[,1]== 0.6]
alpha[x_val[,1]== 0.6]
x_val[,1]== 0.6
sum(x_val[,1]== 0.6)
sum(x_val[,1]== 0.60000)
sum(x_val[,1]== 0.60000)0.6<x_val<0.61
0.6<x_val<0.61
0.6<x_val[,1]<0.61
0.6<x_val[,1] and x_val[,1]<0.61
0.6<x_val[,1] && x_val[,1]<0.61
0.6<x_val[,1] & x_val[,1]<0.61
sum(0.6<x_val[,1] & x_val[,1]<0.61)
sum(0.6<x_val[,1] & x_val[,1]<0.601)
sum(0.6<x_val[,1] & x_val[,1]<0.6001)
alpha[sum(0.6<x_val[,1] & x_val[,1]<0.6001)]
alpha[sum(0.6<x_val[,1] & x_val[,1]<0.6001)]
alpha[(0.6<x_val[,1] & x_val[,1]<0.6001),]
alpha <- data.frame(perf_knn@alpha.values)
x_val <- data.frame(perf_knn@x.values)
alpha[(0.6<x_val[,1] & x_val[,1]<0.6001),]
alpha[(0.6<x_val[,1] & x_val[,1]<0.6001),]
sum(0.6<x_val[,1] & x_val[,1]<0.6001)
sum(0.6<x_val[,1] & x_val[,1]<0.601)
sum(0.6<x_val[,1] & x_val[,1]<0.61)
sum(0.6<x_val[,1] & x_val[,1]<0.7)
View(perf_knn)
View(x_val)
sum(0.6<x_val[,1] & x_val[,1]<0.8)
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_glm <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha[(0.6<x_val[,1] & x_val[,1]<0.6001),]
predictions_Knn <- knn(scale(datos_train_numeric), scale(datos_train_numeric), cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
pref_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
View(pref_tree)
pref_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
sum(0.6<x_val[,1] & x_val[,1]<0.8)alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.61),]
sum(alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.61))
sum(0.6<x_val_tree[,1] & x_val_tree[,1]<0.61)
View(perf_tree)
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha[(0.6<x_val[,1] & x_val[,1]<0.6001),]
# kk
# perf_glm@alpha.values
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric), scale(datos_train_numeric), cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(pref_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
View(x_val_tree)
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
best_alpha_rf
set.seed(1234)
modelo_svm <- e1071::svm(formula = price_categ1 ~ log_sqft_living + zona,
data = datos_train_limpio,
kernel = "radial",
probability =TRUE,
# fijo cost a 0.01 - con 0.01: 11160 | con 0.5: 5900 | con 0.8: 5820 | con 1: 5816 | con 2: 5879
gamma = 0.5,
# fijo gamma a 1 - con cost 0.01: 5816 | con cost 1: 4868 | con cost 8: 4849 | con cost 100: 4790
cost = 1)
summary(modelo_svm)
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha[(0.6<x_val[,1] & x_val[,1]<0.6001),]
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric),
scale(datos_train_numeric),
cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(pref_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
View(modelo_svm)
load("svm_cv.Rdata")
svm_cv <- load("svm_cv.Rdata")
svm$best.parameters
svm_cv$best.parameters
svm_cv
svm_cv$datos_test
svm_cv <- load("svm_cv.Rdata")
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
best_alpha_glm <- alpha[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
best_alpha_glm <- alpha_glm[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric),
scale(datos_train_numeric),
cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
perf_knn <- performance(pred_knn,"sens","spec")
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
set.seed(1234)
modelo_svm <- e1071::svm(formula = price_categ1 ~ log_sqft_living + zona,
data = datos_train_limpio,
kernel = "radial",
probability =TRUE,
# fijo cost a 0.01 - con 0.01: 11160 | con 0.5: 5900 | con 0.8: 5820 | con 1: 5816 | con 2: 5879
gamma = 0.5,
# fijo gamma a 1 - con cost 0.01: 5816 | con cost 1: 4868 | con cost 8: 4849 | con cost 100: 4790
cost = 1)
summary(modelo_svm)
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(pref_tree, col="red",add = TRUE)
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha_glm[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric),
scale(datos_train_numeric),
cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(pref_tree, col="red",add = TRUE)
plot(perf_tree, col="red",add = TRUE)
plot(perf_glm,col="blue")
plot(perf_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
set.seed(1234)
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha_glm[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric),
scale(datos_train_numeric),
cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(perf_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
set.seed(1234)
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha_glm[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric),
scale(datos_train_numeric),
cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(perf_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
datos_train_limpio %>%
group_by(price_categ1) %>%
summarise(Count = n())%>%
mutate(percent = prop.table(Count)*100)%>%
ggplot(aes(reorder(price_categ1, - percent), percent), fill = price_categ1) +
geom_col(fill = c("salmon", "cyan3"), size = 0.5) +
xlab("Precio de las casas") +
ylab("Porcentaje") +
ggtitle("Porcentaje de casas por precio") +
theme(plot.title = element_text(hjust = 0.5))
set.seed(1234)
# REGRESIÓN LOGÍSTICA
predictions_glm <- predict(model_glm, newdata = datos_train_rl, type = "response")
pred_glm <- prediction(predictions_glm, datos_train_rl$price_categ1)
perf_glm <- performance(pred_glm,"sens","spec")
alpha_glm <- data.frame(perf_glm@alpha.values)
x_val_glm <- data.frame(perf_glm@x.values)
best_alpha_glm <- alpha_glm[(0.6<x_val_glm[,1] & x_val_glm[,1]<0.6001),]
# KNN
# model_knn=knn.cv(scale(datos_train_numeric),cl=as.factor(datos_train_limpio$price_categ1),k=17, prob = TRUE)
predictions_Knn <- knn(scale(datos_train_numeric),
scale(datos_train_numeric),
cl=datos_train_limpio$price_categ1, k=17, prob = TRUE)
pred_knn <- prediction(attr(predictions_Knn,"prob"), datos_train_limpio$price_categ1)
perf_knn <- performance(pred_knn,"sens","spec")
alpha_knn <- data.frame(perf_knn@alpha.values)
x_val_knn <- data.frame(perf_knn@x.values)
best_alpha_knn <- alpha_knn[(0.6<x_val_knn[,1] & x_val_knn[,1]<0.6001),]
# ARBOL DE DECISION
predictions_tree <- predict(decisiontree_model, newdata = datos_decision_tree, type = "prob")
pred_tree = prediction(predictions_tree[,2], datos_decision_tree$price_categ1)
perf_tree = performance(pred_tree,"sens","spec")
alpha_tree <- data.frame(perf_tree@alpha.values)
x_val_tree <- data.frame(perf_tree@x.values)
best_alpha_tree <- alpha_tree[(0.6<x_val_tree[,1] & x_val_tree[,1]<0.6001),]
# RANDOM FOREST
predictions_rf <- predict(randomforest_model, new_data=datos_train_limpio, type = "prob")
pred_rf <- prediction(predictions_rf[,2],datos_train_limpio$price_categ1)
perf_rf <- performance(pred_rf,"sens","spec")
alpha_rf <- data.frame(perf_rf@alpha.values)
x_val_rf <- data.frame(perf_rf@x.values)
best_alpha_rf <- alpha_rf[(0.6<x_val_rf[,1] & x_val_rf[,1]<0.6001),]
# SVM
predictions_svm <- predict(modelo_svm, newdata=datos_train_limpio, probability = TRUE)
prob_svm<-attr(predictions_svm,"probabilities")
pred_svm <- prediction(prob_svm[,2], datos_train_limpio$price_categ)
perf_svm <- performance(pred_svm,"sens","spec")
plot(perf_glm,col="blue")
plot(perf_tree, col="red",add = TRUE)
plot(perf_rf,col="green", add = TRUE)
plot(perf_svm, col="yellow",add = TRUE)
plot(perf_knn, col="orange",add = TRUE)
legend(x="left", legend=c("GLM","DT","RF","SVM","KNN"), fill=c("blue","red","green","yellow","orange"), cex=0.8)
